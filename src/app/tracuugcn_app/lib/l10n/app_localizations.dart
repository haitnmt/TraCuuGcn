import 'dart:async';

import 'package:flutter/foundation.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter_localizations/flutter_localizations.dart';
import 'package:intl/intl.dart' as intl;

import 'app_localizations_en.dart';
import 'app_localizations_vi.dart';

// ignore_for_file: type=lint

/// Callers can lookup localized strings with an instance of AppLocalizations
/// returned by `AppLocalizations.of(context)`.
///
/// Applications need to include `AppLocalizations.delegate()` in their app's
/// `localizationDelegates` list, and the locales they support in the app's
/// `supportedLocales` list. For example:
///
/// ```dart
/// import 'l10n/app_localizations.dart';
///
/// return MaterialApp(
///   localizationsDelegates: AppLocalizations.localizationsDelegates,
///   supportedLocales: AppLocalizations.supportedLocales,
///   home: MyApplicationHome(),
/// );
/// ```
///
/// ## Update pubspec.yaml
///
/// Please make sure to update your pubspec.yaml to include the following
/// packages:
///
/// ```yaml
/// dependencies:
///   # Internationalization support.
///   flutter_localizations:
///     sdk: flutter
///   intl: any # Use the pinned version from flutter_localizations
///
///   # Rest of dependencies
/// ```
///
/// ## iOS Applications
///
/// iOS applications define key application metadata, including supported
/// locales, in an Info.plist file that is built into the application bundle.
/// To configure the locales supported by your app, you‚Äôll need to edit this
/// file.
///
/// First, open your project‚Äôs ios/Runner.xcworkspace Xcode workspace file.
/// Then, in the Project Navigator, open the Info.plist file under the Runner
/// project‚Äôs Runner folder.
///
/// Next, select the Information Property List item, select Add Item from the
/// Editor menu, then select Localizations from the pop-up menu.
///
/// Select and expand the newly-created Localizations item then, for each
/// locale your application supports, add a new item and select the locale
/// you wish to add from the pop-up menu in the Value field. This list should
/// be consistent with the languages listed in the AppLocalizations.supportedLocales
/// property.
abstract class AppLocalizations {
  AppLocalizations(String locale)
    : localeName = intl.Intl.canonicalizedLocale(locale.toString());

  final String localeName;

  static AppLocalizations? of(BuildContext context) {
    return Localizations.of<AppLocalizations>(context, AppLocalizations);
  }

  static const LocalizationsDelegate<AppLocalizations> delegate =
      _AppLocalizationsDelegate();

  /// A list of this localizations delegate along with the default localizations
  /// delegates.
  ///
  /// Returns a list of localizations delegates containing this delegate along with
  /// GlobalMaterialLocalizations.delegate, GlobalCupertinoLocalizations.delegate,
  /// and GlobalWidgetsLocalizations.delegate.
  ///
  /// Additional delegates can be added by appending to this list in
  /// MaterialApp. This list does not have to be used at all if a custom list
  /// of delegates is preferred or required.
  static const List<LocalizationsDelegate<dynamic>> localizationsDelegates =
      <LocalizationsDelegate<dynamic>>[
        delegate,
        GlobalMaterialLocalizations.delegate,
        GlobalCupertinoLocalizations.delegate,
        GlobalWidgetsLocalizations.delegate,
      ];

  /// A list of this localizations delegate's supported locales.
  static const List<Locale> supportedLocales = <Locale>[
    Locale('en'),
    Locale('vi'),
  ];

  /// No description provided for @appTitle.
  ///
  /// In vi, this message translates to:
  /// **'Tra C·ª©u GCN'**
  String get appTitle;

  /// No description provided for @appVersion.
  ///
  /// In vi, this message translates to:
  /// **'1.0.0'**
  String get appVersion;

  /// No description provided for @appDescription.
  ///
  /// In vi, this message translates to:
  /// **'Tra c·ª©u th√¥ng tin Gi·∫•y Ch·ª©ng Nh·∫≠n'**
  String get appDescription;

  /// No description provided for @copyright.
  ///
  /// In vi, this message translates to:
  /// **'¬© 2025 - vpdkbacninh.vn | haihv.vn'**
  String get copyright;

  /// No description provided for @searchHintText.
  ///
  /// In vi, this message translates to:
  /// **'Nh·∫≠p th√¥ng tin m√£ Qr, m√£ v·∫°ch, s·ªë ph√°t h√†nh (Serial) ho·∫∑c m√£ Gi·∫•y ch·ª©ng nh·∫≠n!'**
  String get searchHintText;

  /// No description provided for @mobileSearchHintText.
  ///
  /// In vi, this message translates to:
  /// **'Nh·∫≠p th√¥ng tin tra c·ª©u!'**
  String get mobileSearchHintText;

  /// No description provided for @helperText.
  ///
  /// In vi, this message translates to:
  /// **'M√£ QR ‚Ä¢ M√£ v·∫°ch ‚Ä¢ S·ªë ph√°t h√†nh (Serial) ‚Ä¢ M√£ Gi·∫•y ch·ª©ng nh·∫≠n'**
  String get helperText;

  /// No description provided for @imageFeatureMessage.
  ///
  /// In vi, this message translates to:
  /// **'Ch·ª©c nƒÉng ch·ªçn ·∫£nh s·∫Ω ƒë∆∞·ª£c th√™m v√†o!'**
  String get imageFeatureMessage;

  /// No description provided for @qrFeatureMessage.
  ///
  /// In vi, this message translates to:
  /// **'Ch·ª©c nƒÉng qu√©t QR s·∫Ω ƒë∆∞·ª£c th√™m v√†o!'**
  String get qrFeatureMessage;

  /// No description provided for @searchFeatureMessage.
  ///
  /// In vi, this message translates to:
  /// **'Ch·ª©c nƒÉng t√¨m ki·∫øm s·∫Ω ƒë∆∞·ª£c th√™m v√†o!'**
  String get searchFeatureMessage;

  /// No description provided for @logoutSuccessMessage.
  ///
  /// In vi, this message translates to:
  /// **'ƒê√£ ƒëƒÉng xu·∫•t th√†nh c√¥ng!'**
  String get logoutSuccessMessage;

  /// No description provided for @helpDialogTitle.
  ///
  /// In vi, this message translates to:
  /// **'H∆∞·ªõng d·∫´n tra c·ª©u'**
  String get helpDialogTitle;

  /// No description provided for @aboutDialogTitle.
  ///
  /// In vi, this message translates to:
  /// **'V·ªÅ ·ª©ng d·ª•ng'**
  String get aboutDialogTitle;

  /// No description provided for @logoutDialogTitle.
  ///
  /// In vi, this message translates to:
  /// **'X√°c nh·∫≠n ƒëƒÉng xu·∫•t'**
  String get logoutDialogTitle;

  /// No description provided for @languageDialogTitle.
  ///
  /// In vi, this message translates to:
  /// **'Ch·ªçn ng√¥n ng·ªØ'**
  String get languageDialogTitle;

  /// No description provided for @imageTooltip.
  ///
  /// In vi, this message translates to:
  /// **'Ch·ªçn ·∫£nh t·ª´ th∆∞ vi·ªán'**
  String get imageTooltip;

  /// No description provided for @qrTooltip.
  ///
  /// In vi, this message translates to:
  /// **'Qu√©t m√£ QR'**
  String get qrTooltip;

  /// No description provided for @sendTooltip.
  ///
  /// In vi, this message translates to:
  /// **'G·ª≠i y√™u c·∫ßu tra c·ª©u'**
  String get sendTooltip;

  /// No description provided for @helpTooltip.
  ///
  /// In vi, this message translates to:
  /// **'H∆∞·ªõng d·∫´n nh·∫≠p th√¥ng tin'**
  String get helpTooltip;

  /// No description provided for @aboutTooltip.
  ///
  /// In vi, this message translates to:
  /// **'V·ªÅ ch√∫ng t√¥i'**
  String get aboutTooltip;

  /// No description provided for @logoutTooltip.
  ///
  /// In vi, this message translates to:
  /// **'ƒêƒÉng xu·∫•t'**
  String get logoutTooltip;

  /// No description provided for @homeMenuItem.
  ///
  /// In vi, this message translates to:
  /// **'Trang ch·ªß'**
  String get homeMenuItem;

  /// No description provided for @searchMenuItem.
  ///
  /// In vi, this message translates to:
  /// **'Tra c·ª©u'**
  String get searchMenuItem;

  /// No description provided for @historyMenuItem.
  ///
  /// In vi, this message translates to:
  /// **'L·ªãch s·ª≠ tra c·ª©u'**
  String get historyMenuItem;

  /// No description provided for @settingsMenuItem.
  ///
  /// In vi, this message translates to:
  /// **'C√†i ƒë·∫∑t'**
  String get settingsMenuItem;

  /// No description provided for @languageMenuItem.
  ///
  /// In vi, this message translates to:
  /// **'Ng√¥n ng·ªØ'**
  String get languageMenuItem;

  /// No description provided for @closeButton.
  ///
  /// In vi, this message translates to:
  /// **'ƒê√≥ng'**
  String get closeButton;

  /// No description provided for @cancelButton.
  ///
  /// In vi, this message translates to:
  /// **'H·ªßy'**
  String get cancelButton;

  /// No description provided for @logoutButton.
  ///
  /// In vi, this message translates to:
  /// **'ƒêƒÉng xu·∫•t'**
  String get logoutButton;

  /// No description provided for @understoodButton.
  ///
  /// In vi, this message translates to:
  /// **'ƒê√£ hi·ªÉu'**
  String get understoodButton;

  /// No description provided for @selectButton.
  ///
  /// In vi, this message translates to:
  /// **'Ch·ªçn'**
  String get selectButton;

  /// No description provided for @helpIntroText.
  ///
  /// In vi, this message translates to:
  /// **'B·∫°n c√≥ th·ªÉ tra c·ª©u b·∫±ng m·ªôt trong c√°c th√¥ng tin sau:'**
  String get helpIntroText;

  /// No description provided for @helpQrText.
  ///
  /// In vi, this message translates to:
  /// **'üîç M√£ QR Code:'**
  String get helpQrText;

  /// No description provided for @helpQrDescription.
  ///
  /// In vi, this message translates to:
  /// **'   ‚Ä¢ Qu√©t tr·ª±c ti·∫øp t·ª´ gi·∫•y ch·ª©ng nh·∫≠n'**
  String get helpQrDescription;

  /// No description provided for @helpBarcodeText.
  ///
  /// In vi, this message translates to:
  /// **'üì± M√£ v·∫°ch (Barcode):'**
  String get helpBarcodeText;

  /// No description provided for @helpBarcodeDescription.
  ///
  /// In vi, this message translates to:
  /// **'   ‚Ä¢ D√£y s·ªë d∆∞·ªõi m√£ v·∫°ch tr√™n GCN'**
  String get helpBarcodeDescription;

  /// No description provided for @helpSerialText.
  ///
  /// In vi, this message translates to:
  /// **'üî¢ S·ªë ph√°t h√†nh (Serial):'**
  String get helpSerialText;

  /// No description provided for @helpSerialDescription.
  ///
  /// In vi, this message translates to:
  /// **'   ‚Ä¢ S·ªë s√™-ri ghi tr√™n gi·∫•y ch·ª©ng nh·∫≠n'**
  String get helpSerialDescription;

  /// No description provided for @helpSerialExample.
  ///
  /// In vi, this message translates to:
  /// **'   ‚Ä¢ V√≠ d·ª•: BN-001234567'**
  String get helpSerialExample;

  /// No description provided for @helpGcnText.
  ///
  /// In vi, this message translates to:
  /// **'üìÑ M√£ Gi·∫•y ch·ª©ng nh·∫≠n:'**
  String get helpGcnText;

  /// No description provided for @helpGcnDescription.
  ///
  /// In vi, this message translates to:
  /// **'   ‚Ä¢ M√£ s·ªë GCN ghi tr√™n t√†i li·ªáu'**
  String get helpGcnDescription;

  /// No description provided for @helpGcnExample.
  ///
  /// In vi, this message translates to:
  /// **'   ‚Ä¢ V√≠ d·ª•: 27-T-123456789'**
  String get helpGcnExample;

  /// No description provided for @helpNoteText.
  ///
  /// In vi, this message translates to:
  /// **'L∆∞u √Ω: Ch·ªâ c·∫ßn nh·∫≠p m·ªôt trong c√°c th√¥ng tin tr√™n ƒë·ªÉ tra c·ª©u.'**
  String get helpNoteText;

  /// No description provided for @mainTitle1.
  ///
  /// In vi, this message translates to:
  /// **'TRA C·ª®U TH√îNG TIN'**
  String get mainTitle1;

  /// No description provided for @mainTitle2.
  ///
  /// In vi, this message translates to:
  /// **'GI·∫§Y CH·ª®NG NH·∫¨N'**
  String get mainTitle2;

  /// No description provided for @mainSubtitle.
  ///
  /// In vi, this message translates to:
  /// **'QUY·ªÄN S·ª¨ D·ª§NG ƒê·∫§T, QUY·ªÄN S·ªû H·ªÆU T√ÄI S·∫¢N G·∫ÆN LI·ªÄN V·ªöI ƒê·∫§T'**
  String get mainSubtitle;

  /// No description provided for @mainSubtitleMobile.
  ///
  /// In vi, this message translates to:
  /// **'QUY·ªÄN S·ª¨ D·ª§NG ƒê·∫§T,\nQUY·ªÄN S·ªû H·ªÆU T√ÄI S·∫¢N G·∫ÆN LI·ªÄN V·ªöI ƒê·∫§T'**
  String get mainSubtitleMobile;

  /// No description provided for @logoutConfirmMessage.
  ///
  /// In vi, this message translates to:
  /// **'B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ƒëƒÉng xu·∫•t kh·ªèi ·ª©ng d·ª•ng?'**
  String get logoutConfirmMessage;

  /// No description provided for @vietnamese.
  ///
  /// In vi, this message translates to:
  /// **'Ti·∫øng Vi·ªát'**
  String get vietnamese;

  /// No description provided for @english.
  ///
  /// In vi, this message translates to:
  /// **'English'**
  String get english;
}

class _AppLocalizationsDelegate
    extends LocalizationsDelegate<AppLocalizations> {
  const _AppLocalizationsDelegate();

  @override
  Future<AppLocalizations> load(Locale locale) {
    return SynchronousFuture<AppLocalizations>(lookupAppLocalizations(locale));
  }

  @override
  bool isSupported(Locale locale) =>
      <String>['en', 'vi'].contains(locale.languageCode);

  @override
  bool shouldReload(_AppLocalizationsDelegate old) => false;
}

AppLocalizations lookupAppLocalizations(Locale locale) {
  // Lookup logic when only language code is specified.
  switch (locale.languageCode) {
    case 'en':
      return AppLocalizationsEn();
    case 'vi':
      return AppLocalizationsVi();
  }

  throw FlutterError(
    'AppLocalizations.delegate failed to load unsupported locale "$locale". This is likely '
    'an issue with the localizations generation tool. Please file an issue '
    'on GitHub with a reproducible sample app and the gen-l10n configuration '
    'that was used.',
  );
}
